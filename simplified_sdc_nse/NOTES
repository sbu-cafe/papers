Current status:

  -- we can run in SDC mode with the VODE integrator without problems
     (currently testing detonation)

  -- things run significantly slower due to the EOS in the RHS:

     Each sample counts as 0.01 seconds.
       %   cumulative   self              self     total           
      time   seconds   seconds    calls  ns/call  ns/call  name    
       9.78      1.69     1.69                             __actual_eos_module_MOD_h5 (actual_eos.F90:1433 @ 635fa2)
       4.34      2.44     0.75                             __actual_eos_module_MOD_h5 (actual_eos.F90:1433 @ 635e49)
       3.79      3.10     0.66                             __microphysics_math_module_MOD_esum (microphysics_math.F90:107 @ 63a7ee)
       2.37      3.51     0.41                             __actual_eos_module_MOD_actual_eos (actual_eos.F90:486 @ 637b32)
       2.20      3.89     0.38                             __actual_eos_module_MOD_h3 (actual_eos.F90:1477 @ 635d49)
       1.85      4.21     0.32                             __microphysics_math_module_MOD_esum (microphysics_math.F90:96 @ 63a7cc)
       1.33      4.44     0.23                             daxpy_ (daxpy.f:57 @ 5066f0)
       1.27      4.66     0.22                             __microphysics_math_module_MOD_esum (microphysics_math.F90:109 @ 63a7fa)
       1.24      4.87     0.22                             __microphysics_math_module_MOD_esum (microphysics_math.F90:106 @ 63a7e6)
       1.16      5.07     0.20                             __microphysics_math_module_MOD_esum (microphysics_math.F90:111 @ 63a808)
       1.04      5.25     0.18                             __actual_eos_module_MOD_actual_eos (actual_eos.F90:487 @ 637fe4)
       1.04      5.43     0.18                             __actual_eos_module_MOD_actual_eos (actual_eos.F90:805 @ 639a61)
       0.98      5.60     0.17                             dgesl_ (dgesl.f:91 @ 50593f)
       0.87      5.75     0.15                             __actual_eos_module_MOD_actual_eos (actual_eos.F90:419 @ 637878)
       0.87      5.90     0.15                             __actual_eos_module_MOD_actual_eos (actual_eos.F90:381 @ 638fac)


     in order to argue that we get a performance benefit, we need to
     be able run more efficiently with SDC, ultimately fewer timesteps
     when the burning is tough.

     To really help the situation, we need to investigate whether we
     can make a tabular EOS in terms of rho, e

  -- it is unclear what tolerances we should be using for the
     integration -- in particular for the species

  -- also, how does a low tolerance affect conservation?  I think it
     doesn't affect things since the conservation comes in through the
     advective source, which is piecewise constant, so even a single
     step would get conservation perfect.



Metric:

  -- there are two things we should try to demonstrate:

     * do we take less steps for cases when the burning is intense?

     * do we take less wallclock time?


Test problems:


  -- detonation:

     ultimately we would like to see if we do better for the cases
     when we enter NSE.

     things to run:

     * we need to do a convergence test with the Strang case to see
       what the detonation velocity and NSE composition are.

     * then run SDC cases to see how we do in comparison

     * can we show, via a Nonaka plot, that one is better?


  -- wdmerger_collision

     * we had a single-level test problem (maybe the one in the suite)
       that showed very poor Ni production convergence unless the
       timestep was severely cut -- can the SDC method do better?

  -- gravity problem?

     Is there a pure gravity + hydro problem that we can show that
     demonstrates that the treatment of gravity is more accurate with
     this method?
